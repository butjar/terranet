#!/usr/bin/env python
from mininet.cli import CLI
from mininet.log import setLogLevel, info
from mininet.node import OVSBridge

from ipmininet.cli import IPCLI
from ipmininet.router.config import RouterConfig, OpenrDaemon, Openr

from terranet.config import KomondorConfig
from terranet.net import Terranet
from terranet.topo import Terratopo
from terranet.link import Terralink, Wifi5GHzLink, Wifi60GHzLink

komondor_config = KomondorConfig("{{ komondor_config.cfg_file }}")

class SimpleOpenrNet(Terratopo):
    def build(self, *args, **kwargs):

        # Add DNs
        {%- import 'dn.j2' as dn_tmpl %}
        {%- for cfg in komondor_config.access_points() %}
        {{ dn_tmpl.input(cfg)|indent(8) }}
        {% endfor %}

        # Add CNs
        {%- import 'cn.j2' as cn_tmpl %}
        {%- for cfg in komondor_config.stations() %}
        {{ cn_tmpl.input(cfg)|indent(8) }}
        {% endfor %}

        # Add WiFi 5GHz Links
        {%- import 'link.j2' as link_tmpl %}
        {%- for (node1, node2) in komondor_config.wifi5GHz_links() %}
        {{ link_tmpl.input(node1, node2, "Wifi5GHzLink")|indent(8) }}
        {%- endfor %}

        # Add WiFi 5GHz Links
        {%- import 'link.j2' as link_tmpl %}
        {%- for (node1, node2) in komondor_config.wifi60GHz_links() %}
        {{ link_tmpl.input(node1, node2, "Wifi60GHzLink")|indent(8) }}
        {%- endfor %}

        super(SimpleOpenrNet, self).build(*args, **kwargs)


if __name__ == '__main__':
    setLogLevel( 'info' )
    net = SimpleOpenrNet()
    system_config = dict(komondor_config.system())
    net = Terranet(topo=SimpleOpenrNet(),
                   switch=OVSBridge,
                   system_config=system_config)
    net.start()
    IPCLI(net)
    net.stop()
