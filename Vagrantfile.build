# vi: syntax=ruby
# vi: filetype=ruby

# terranet-base provisioning script
$base_provisioning = <<~SCRIPT
  pushd /usr/local/src
  touch /etc/rc.local

  ## Install (ip)mininet VM
  curl -sSL https://raw.githubusercontent.com/cnp3/ipmininet/master/ipmininet/install/build_vm.sh | bash
  rm -rf /etc/rc.local
  dpkg-reconfigure -fnoninteractive openssh-server

  ## Install Komondor
  git clone https://github.com/Bustel/Komondor.git
  mkdir -p Komondor/Code/build
  pushd Komondor/Code/build
  cmake ..
  make
  make install
  popd

  ## Install and start grafana
  apt-get install -y apt-transport-https software-properties-common wget
  wget -q -O - https://packages.grafana.com/gpg.key | apt-key add -
  add-apt-repository "deb https://packages.grafana.com/oss/deb stable main"

  apt-get update && apt-get install grafana

  systemctl daemon-reload
  systemctl enable grafana-server --now

  ## Install and start influxdb
  wget -qO- https://repos.influxdata.com/influxdb.key | apt-key add -
  source /etc/lsb-release
  echo "deb https://repos.influxdata.com/${DISTRIB_ID,,} ${DISTRIB_CODENAME} stable" | tee /etc/apt/sources.list.d/influxdb.list

  apt-get update && apt-get install influxdb

  systemctl unmask influxdb.service
  systemctl enable influxdb --now
  popd

  ## Install collectd
  apt-get update && apt-get install -y collectd
  mkdir -p /usr/share/collectd/

  curl -sLo /usr/share/collectd/types.db https://raw.githubusercontent.com/collectd/collectd/master/src/types.db

  systemctl unmask collectd.service
  systemctl enable collectd --now
SCRIPT


sudo systemctl unmask collectd.service
sudo systemctl enable collectd --now

# Install ryu
sudo apt-get update && sudo apt-get install -y python3-ryu

SCRIPT

Vagrant.configure('2') do |config|
  config.vm.define "terranet", primary: true do |t|
    t.vm.box = "butja/terranet-base"
    t.vm.provider :virtualbox
    t.vm.synced_folder ".", "/vagrant", disabled: true
    # Forward grafana interface
    t.vm.network "forwarded_port", guest: 3000, host: 3000
    t.vm.provision "shell", inline: ""
    t.ssh.insert_key = false
  end

  config.vm.define 'terranet-base', autostart: false do |t|
    t.vm.box = 'ubuntu/bionic64'
    t.vm.provider :virtualbox
    t.vm.synced_folder '.', '/vagrant', disabled: true
    t.vagrant.plugins = ['vagrant-disksize']
    t.disksize.size = '20GB'
    t.vm.provider 'virtualbox' do |v|
        if File.exist?('.vagrant/machines/terranet-base/virtualbox/action_provision')
            v.memory = 512
        else
            v.memory = 5120
        end
    end
    # Forward grafana interface
    t.vm.network "forwarded_port", guest: 3000, host: 3030
    t.vm.provision 'shell', inline: $base_provisioning
    t.ssh.insert_key = false
  end
end
